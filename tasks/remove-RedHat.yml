# tasks file for iteasy.ansible.roles.webhost_manager
- name: Check if the user exists
  ansible.builtin.getent:
    database: passwd
    key: "{{ user_id }}"
  register: user_info
  failed_when: user_info is not defined or user_info is none
  ignore_errors: false  # 사용자가 없으면 실패하게 설정

- name: Ensure the user account is absent
  ansible.builtin.user:
    name: "{{ user_id }}"
    state: absent
    remove: yes  # 이 옵션을 통해 홈 디렉터리와 메일 스풀을 함께 삭제합니다.
  when: user_info is defined and user_info is not none
  register: user_deleted

- name: Remove user's home directory if it still exists
  ansible.builtin.file:
    path: "/home/{{ user_id }}"
    state: absent
  when: user_deleted.changed  # 계정 삭제가 이루어졌을 경우에만 실행됩니다.
  
# - name: Remove user's mail spool if it still exists
#   ansible.builtin.file:
#     path: "/var/spool/mail/{{ user_id }}"
#     state: absent
#   when: user_deleted.changed  # 계정 삭제가 이루어졌을 경우에만 실행됩니다.

# DB
- name: Create SQL file
  copy:
    dest: "/tmp/db_drop_{{ ansible_date_time.iso8601_basic_short }}.sql"
    content: |
      DROP DATABASE IF EXISTS {{ db_name }};
      DROP USER IF EXISTS '{{ db_user }}'@'localhost';

- name: Execute SQL file
  shell: mysql -u {{ mysql_root_user }} -p'{{ mysql_root_password }}' < /tmp/db_drop_{{ ansible_date_time.iso8601_basic_short }}.sql
  when: db_name is defined
# - name: Execute SQL file
#   command: >
#     mysql -u {{ mysql_root_user }} -p'{{ mysql_root_password }}' < /tmp/db_drop_{{ ansible_date_time.iso8601_basic_short }}.sql
#   when: db_name is defined

- name: Remove SQL file
  file:
    path: "/tmp/db_drop_{{ ansible_date_time.iso8601_basic_short }}.sql"
    state: absent
  when: db_name is defined

# 쿼타 해제
# - name: Clear user's disk quota
#   command: "setquota -u {{ user_id }} 0 0 0 0 -a"
#   when: user_deleted.changed
#   register: quota_cleared

# - name: Check quota clearing result
#   debug:
#     msg: "Quota cleared for user {{ user_id }}"
#   when: quota_cleared.changed

# vhost 삭제
